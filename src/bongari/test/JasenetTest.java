package bongari.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import bongari.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.09.07 10:26:07 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class JasenetTest {



  // Generated by ComTest BEGIN
  /** testLisaa28 */
  @Test
  public void testLisaa28() {    // Jasenet: 28
    Jasenet jasenet = new Jasenet(); 
    Jasen testi = new Jasen(); 
    jasenet.lisaa(testi); 
    assertEquals("From: Jasenet line: 32", 1, jasenet.getLkm()); 
    Jasen testi2 = new Jasen(); 
    Jasen testi3 = new Jasen(); 
    Jasen testi4 = new Jasen(); 
    Jasen testi5 = new Jasen(); 
    Jasen testi6 = new Jasen(); 
    jasenet.lisaa(testi2); jasenet.lisaa(testi3); jasenet.lisaa(testi4); jasenet.lisaa(testi5); 
    try {
    jasenet.lisaa(testi6); 
    fail("Jasenet: 39 Did not throw Error");
    } catch(Error _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista56 
   * @throws ExceptionHandler when error
   */
  @Test
  public void testPoista56() throws ExceptionHandler {    // Jasenet: 56
    Jasenet jasenet = new Jasenet(); 
    Jasen jasen = new Jasen(); 
    jasen.parse("1|Roope|Ankka"); 
    jasenet.lisaa(jasen); 
    assertEquals("From: Jasenet line: 62", 1, jasenet.getLkm()); 
    Jasen jasen2 = new Jasen(); 
    jasen2.parse("2|Aku|Ankka"); 
    jasenet.lisaa(jasen2); 
    assertEquals("From: Jasenet line: 66", 2, jasenet.getLkm()); 
    jasenet.poista(1); 
    assertEquals("From: Jasenet line: 68", 1, jasenet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testMuokkaa88 
   * @throws ExceptionHandler when error
   */
  @Test
  public void testMuokkaa88() throws ExceptionHandler {    // Jasenet: 88
    Jasenet jasenet = new Jasenet(); 
    Jasen jasen = new Jasen(); 
    jasen.parse("1|Repe|Sorsa"); 
    jasenet.lisaa(jasen); 
    assertEquals("From: Jasenet line: 94", "Sorsa", jasenet.annaId(1).getSukunimi()); 
    Jasen muokattuJasen = new Jasen(); 
    muokattuJasen.parse("1|Repe|Ankka"); 
    jasenet.muokkaa(muokattuJasen); 
    assertEquals("From: Jasenet line: 98", "Ankka", jasenet.annaId(1).getSukunimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi116 
   * @throws ExceptionHandler when error
   */
  @Test
  public void testEtsi116() throws ExceptionHandler {    // Jasenet: 116
    Jasenet jasenet = new Jasenet(); 
    Jasen jasen = new Jasen(); 
    jasen.parse("1|Aku|Ankka"); 
    Jasen jasen2 = new Jasen(); 
    jasen2.parse("2|Roope|Ankka"); 
    jasenet.lisaa(jasen); jasenet.lisaa(jasen2); 
    List<Jasen> loydetyt = jasenet.etsi("Ankka"); 
    assertEquals("From: Jasenet line: 126", 2, loydetyt.size()); 
    List<Jasen> loydetyt2 = jasenet.etsi("Ank"); 
    assertEquals("From: Jasenet line: 128", 2, loydetyt2.size()); 
    List<Jasen> loydetyt3 = jasenet.etsi("Pekka"); 
    assertEquals("From: Jasenet line: 130", 0, loydetyt3.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsiJasenenIndeksi148 
   * @throws ExceptionHandler when error
   */
  @Test
  public void testEtsiJasenenIndeksi148() throws ExceptionHandler {    // Jasenet: 148
    Jasenet jasenet = new Jasenet(); 
    Jasen jasen = new Jasen(); 
    jasen.parse("1|Repe|Sorsa"); 
    Jasen jasen2 = new Jasen(); 
    jasen2.parse("2|Aku|Ankka"); 
    jasenet.lisaa(jasen); jasenet.lisaa(jasen2); 
    int indeksi = jasenet.etsiJasenenIndeksi(1); 
    assertEquals("From: Jasenet line: 157", 0, indeksi); 
    int indeksi2 = jasenet.etsiJasenenIndeksi(2); 
    assertEquals("From: Jasenet line: 159", 1, indeksi2); 
    int indeksiEiLoydy = jasenet.etsiJasenenIndeksi(3); 
    assertEquals("From: Jasenet line: 161", -1, indeksiEiLoydy); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetLkm175 */
  @Test
  public void testGetLkm175() {    // Jasenet: 175
    Jasenet jasenet = new Jasenet(); 
    Jasen jasen = new Jasen(); 
    jasenet.lisaa(jasen); 
    assertEquals("From: Jasenet line: 179", 1, jasenet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna191 */
  @Test
  public void testAnna191() {    // Jasenet: 191
    Jasenet jasenet = new Jasenet(); 
    Jasen jasen1 = new Jasen(); 
    Jasen jasen2 = new Jasen(); 
    jasenet.lisaa(jasen1); jasenet.lisaa(jasen2); 
    assertEquals("From: Jasenet line: 196", jasen1, jasenet.anna(0)); 
    assertEquals("From: Jasenet line: 197", jasen2, jasenet.anna(1)); 
    try {
    jasenet.anna(3); 
    fail("Jasenet: 198 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaId211 
   * @throws ExceptionHandler when error
   */
  @Test
  public void testAnnaId211() throws ExceptionHandler {    // Jasenet: 211
    Jasenet jasenet = new Jasenet(); 
    Jasen jasen = new Jasen(); 
    jasen.parse("1|Roope|Ankka"); 
    Jasen jasen2 = new Jasen(); 
    jasen2.parse("2|Repe|Sorsa"); 
    jasenet.lisaa(jasen); jasenet.lisaa(jasen2); 
    Jasen loydetty = jasenet.annaId(1); 
    assertEquals("From: Jasenet line: 220", "Roope", loydetty.getEtunimi()); 
    Jasen loydetty2 = jasenet.annaId(4); 
    assertEquals("From: Jasenet line: 222", null, loydetty2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaJasenet315 
   * @throws ExceptionHandler when error
   */
  @Test
  public void testAnnaJasenet315() throws ExceptionHandler {    // Jasenet: 315
    Jasenet jasenet = new Jasenet(); 
    Jasen jasen = new Jasen(); 
    jasen.parse("1|Aku|Ankka"); 
    Jasen jasen2 = new Jasen(); 
    jasen2.parse("2|Roope|Ankka"); 
    jasenet.lisaa(jasen); jasenet.lisaa(jasen2); 
    assertEquals("From: Jasenet line: 323", 2, jasenet.annaJasenet().size()); 
  } // Generated by ComTest END
}