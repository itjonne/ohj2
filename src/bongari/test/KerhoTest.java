package bongari.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import bongari.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.11.15 16:51:41 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KerhoTest {



  // Generated by ComTest BEGIN
  /** testLisaa21 */
  @Test
  public void testLisaa21() {    // Kerho: 21
    Kerho kerho = new Kerho(); 
    Jasen jasen = new Jasen(); 
    jasen.setEtunimi("Aku"); 
    jasen.setSukunimi("Ankka"); 
    kerho.lisaa(jasen); 
    assertEquals("From: Kerho line: 27", 1, kerho.etsiJasenet("Aku").size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa38 */
  @Test
  public void testLisaa38() {    // Kerho: 38
    Kerho kerho = new Kerho(); 
    Jasen jasen = new Jasen(); 
    jasen.setEtunimi("Aku"); 
    jasen.setSukunimi("Ankka"); 
    jasen.setJasenId(1); 
    Bongaus bongaus = new Bongaus(); 
    bongaus.setJasenId(1); 
    kerho.lisaa(jasen); 
    kerho.lisaa(bongaus); 
    assertEquals("From: Kerho line: 48", 1, kerho.haeJasenenBongaukset(jasen.getJasenId()).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueKansiosta113 
   * @throws ExceptionHandler when error
   */
  @Test
  public void testLueKansiosta113() throws ExceptionHandler {    // Kerho: 113
    Kerho kerho = new Kerho(); 
    try {
    kerho.lueKansiosta("data/testikerh"); 
    fail("Kerho: 117 Did not throw ExceptionHandler");
    } catch(ExceptionHandler _e_){ _e_.getMessage(); }
    kerho.lueKansiosta("data/testikerho"); 
    assertEquals("From: Kerho line: 119", 1, kerho.etsiJasenet("").size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testHaeJasenenBongattavat154 */
  @Test
  public void testHaeJasenenBongattavat154() {    // Kerho: 154
    Kerho kerho = new Kerho(); 
    Jasen jasen = new Jasen(); 
    jasen.rekisteroi(); 
    Bongattava bongattava = new Bongattava(); 
    bongattava.rekisteroi(); 
    Bongaus bongaus = new Bongaus(); 
    bongaus.setJasenId(jasen.getJasenId()); 
    bongaus.setBongattavaId(bongattava.getBongattavaId()); 
    kerho.lisaa(bongaus); 
    kerho.lisaa(jasen); 
    List<Bongattava> loytyneet; 
    loytyneet = kerho.haeJasenenBongattavat(jasen.getJasenId()); 
    assertEquals("From: Kerho line: 168", 1, loytyneet.size()); 
    Jasen jasen2 = new Jasen(); 
    jasen2.rekisteroi(); 
    Bongaus bongaus2 = new Bongaus(); 
    bongaus2.setJasenId(jasen.getJasenId()); 
    bongaus2.setBongattavaId(bongattava.getBongattavaId()); 
    kerho.lisaa(bongaus2); 
    List<Bongattava> loytyneet2; 
    loytyneet2 = kerho.haeJasenenBongattavat(jasen2.getJasenId()); 
    assertEquals("From: Kerho line: 177", 0, loytyneet2.size()); 
    assertEquals("From: Kerho line: 178", 1, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testHaeJasenenBongaukset196 */
  @Test
  public void testHaeJasenenBongaukset196() {    // Kerho: 196
    Kerho kerho = new Kerho(); 
    Jasen jasen = new Jasen(); 
    jasen.rekisteroi(); 
    Bongattava bongattava = new Bongattava(); 
    bongattava.rekisteroi(); 
    Bongaus bongaus = new Bongaus(); 
    bongaus.setJasenId(jasen.getJasenId()); 
    bongaus.setBongattavaId(bongattava.getBongattavaId()); 
    kerho.lisaa(bongaus); 
    kerho.lisaa(jasen); 
    List<Bongaus> loytyneet; 
    loytyneet = kerho.haeJasenenBongaukset(jasen.getJasenId()); 
    assertEquals("From: Kerho line: 210", 1, loytyneet.size()); 
    Jasen jasen2 = new Jasen(); 
    jasen2.rekisteroi(); 
    Bongaus bongaus2 = new Bongaus(); 
    bongaus2.setJasenId(jasen.getJasenId()); 
    bongaus2.setBongattavaId(bongattava.getBongattavaId()); 
    kerho.lisaa(bongaus2); 
    List<Bongaus> loytyneet2; 
    loytyneet2 = kerho.haeJasenenBongaukset(jasen2.getJasenId()); 
    assertEquals("From: Kerho line: 219", 0, loytyneet2.size()); 
    assertEquals("From: Kerho line: 220", 1, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaJasenenBongaukset233 */
  @Test
  public void testPoistaJasenenBongaukset233() {    // Kerho: 233
    Kerho kerho = new Kerho(); 
    Jasen jasen = new Jasen(); 
    jasen.setJasenId(1); 
    Bongaus bongaus = new Bongaus(); 
    bongaus.setJasenId(1); 
    bongaus.setBongattavaId(1); 
    kerho.lisaa(jasen); 
    kerho.lisaa(bongaus); 
    assertEquals("From: Kerho line: 242", 1, kerho.haeJasenenBongaukset(1).size()); 
    kerho.poistaJasenenBongaukset(1); 
    assertEquals("From: Kerho line: 244", 0, kerho.haeJasenenBongaukset(1).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testHaeBongattavanLoytaneetJasenet259 */
  @Test
  public void testHaeBongattavanLoytaneetJasenet259() {    // Kerho: 259
    Kerho kerho = new Kerho(); 
    Jasen jasen = new Jasen(); 
    jasen.setJasenId(1); 
    Bongaus bongaus = new Bongaus(); 
    bongaus.setJasenId(1); 
    bongaus.setBongattavaId(1); 
    kerho.lisaa(jasen); 
    kerho.lisaa(bongaus); 
    assertEquals("From: Kerho line: 268", 1, kerho.haeBongattavanLoytaneetJasenet(1).size()); 
    assertEquals("From: Kerho line: 269", 0, kerho.haeBongattavanLoytaneetJasenet(2).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testHaeBongattavanBongaukset287 */
  @Test
  public void testHaeBongattavanBongaukset287() {    // Kerho: 287
    Kerho kerho = new Kerho(); 
    Jasen jasen = new Jasen(); 
    jasen.setJasenId(1); 
    Bongaus bongaus = new Bongaus(); 
    bongaus.setJasenId(1); 
    bongaus.setBongattavaId(1); 
    kerho.lisaa(jasen); 
    kerho.lisaa(bongaus); 
    assertEquals("From: Kerho line: 296", 1, kerho.haeBongattavanBongaukset(1).size()); 
    assertEquals("From: Kerho line: 297", 0, kerho.haeBongattavanBongaukset(2).size()); 
  } // Generated by ComTest END
}